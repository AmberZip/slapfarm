-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local PathfindingService = game:GetService("PathfindingService")
local TextChatService = game:GetService("TextChatService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Constants
local TELEPORT_RADIUS = 500
local Y_TOLERANCE = 2
local TELEPORT_DELAY = 0.5
local AUTO_CLICK_INTERVAL = 0.1
local PATH_REFRESH_DELAY = 1
local MAX_CHASE_DISTANCE = 1000
local SLAPBOT_WALK_SPEED = 100

-- GUI Base
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HubGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 300)
mainFrame.Position = UDim2.new(0, 10, 1, -310)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

local tabMenu = Instance.new("Frame")
tabMenu.Size = UDim2.new(0, 120, 1, 0)
tabMenu.Position = UDim2.new(0, 0, 0, 0)
tabMenu.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
tabMenu.BorderSizePixel = 0
tabMenu.Parent = mainFrame

local menuCorner = Instance.new("UICorner")
menuCorner.CornerRadius = UDim.new(0, 10)
menuCorner.Parent = tabMenu

local uiList = Instance.new("UIListLayout")
uiList.FillDirection = Enum.FillDirection.Vertical
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Padding = UDim.new(0, 4)
uiList.Parent = tabMenu

local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -120, 1, 0)
contentFrame.Position = UDim2.new(0, 120, 0, 0)
contentFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
contentFrame.BorderSizePixel = 0
contentFrame.Parent = mainFrame

local contentCorner = Instance.new("UICorner")
contentCorner.CornerRadius = UDim.new(0, 10)
contentCorner.Parent = contentFrame

local tabs = {}
local function createTab(name)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, -10, 0, 40)
	button.Text = name
	button.Font = Enum.Font.SourceSansBold
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	button.TextScaled = true
	button.Parent = tabMenu

	local btnCorner = Instance.new("UICorner")
	btnCorner.CornerRadius = UDim.new(0, 6)
	btnCorner.Parent = button

	local tabPage = Instance.new("Frame")
	tabPage.Size = UDim2.new(1, 0, 1, 0)
	tabPage.BackgroundTransparency = 1
	tabPage.Visible = false
	tabPage.Parent = contentFrame

	tabs[name] = tabPage

	button.MouseButton1Click:Connect(function()
		for _, t in pairs(tabs) do
			t.Visible = false
		end
		tabPage.Visible = true
	end)

	return tabPage
end

local antisTab = createTab("Antis")
local badgesTab = createTab("Badges")
local miscTab = createTab("Misc")
tabs["Antis"].Visible = true

-- === Anti-Void ===
local antiVoidEnabled = false
local antiVoidPart = nil
local function createAntiVoid()
	local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	antiVoidPart = Instance.new("Part")
	antiVoidPart.Anchored = true
	antiVoidPart.CanCollide = true
	antiVoidPart.Transparency = 0.5
	antiVoidPart.Name = "AntiVoidFloor"
	antiVoidPart.Size = Vector3.new(1e6, 0.1, 1e6)
	antiVoidPart.Position = Vector3.new(hrp.Position.X, hrp.Position.Y - 2, hrp.Position.Z)
	antiVoidPart.Material = Enum.Material.SmoothPlastic
	antiVoidPart.Parent = workspace
end

local function removeAntiVoid()
	if antiVoidPart then antiVoidPart:Destroy() end
	antiVoidPart = nil
end

local antiToggle = Instance.new("TextButton")
antiToggle.Size = UDim2.new(0, 320, 0, 50)
antiToggle.Position = UDim2.new(0, 30, 0, 30)
antiToggle.Text = "Anti-Void: OFF"
antiToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
antiToggle.TextColor3 = Color3.new(1, 1, 1)
antiToggle.TextScaled = true
antiToggle.Font = Enum.Font.SourceSansBold
antiToggle.Parent = antisTab

local antiCorner = Instance.new("UICorner")
antiCorner.CornerRadius = UDim.new(0, 8)
antiCorner.Parent = antiToggle

antiToggle.MouseButton1Click:Connect(function()
	antiVoidEnabled = not antiVoidEnabled
	if antiVoidEnabled then
		antiToggle.Text = "Anti-Void: ON"
		antiToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
		createAntiVoid()
	else
		antiToggle.Text = "Anti-Void: OFF"
		antiToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		removeAntiVoid()
	end
end)

-- === Anti-Fling ===
local antiFlingEnabled = false
local function applyAntiFling()
	local char = LocalPlayer.Character
	if not char then return end
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
			part.Velocity = Vector3.zero
			part.RotVelocity = Vector3.zero
		end
	end
end

local antiFlingToggle = Instance.new("TextButton")
antiFlingToggle.Size = UDim2.new(0, 320, 0, 50)
antiFlingToggle.Position = UDim2.new(0, 30, 0, 100)
antiFlingToggle.Text = "Anti-Fling: OFF"
antiFlingToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
antiFlingToggle.TextColor3 = Color3.new(1, 1, 1)
antiFlingToggle.TextScaled = true
antiFlingToggle.Font = Enum.Font.SourceSansBold
antiFlingToggle.Parent = antisTab

local antiFlingCorner = Instance.new("UICorner")
antiFlingCorner.CornerRadius = UDim.new(0, 8)
antiFlingCorner.Parent = antiFlingToggle

antiFlingToggle.MouseButton1Click:Connect(function()
	antiFlingEnabled = not antiFlingEnabled
	if antiFlingEnabled then
		antiFlingToggle.Text = "Anti-Fling: ON"
		antiFlingToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
	else
		antiFlingToggle.Text = "Anti-Fling: OFF"
		antiFlingToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	end
end)

RunService.Stepped:Connect(function()
	if antiFlingEnabled then
		applyAntiFling()
	end
end)

-- === Fling All ===
local flingAllEnabled = false
local flingToggle = Instance.new("TextButton")
flingToggle.Size = UDim2.new(0, 320, 0, 50)
flingToggle.Position = UDim2.new(0, 30, 0, 30)
flingToggle.Text = "Fling All: OFF"
flingToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
flingToggle.TextColor3 = Color3.new(1, 1, 1)
flingToggle.TextScaled = true
flingToggle.Font = Enum.Font.SourceSansBold
flingToggle.Parent = miscTab

local flingCorner = Instance.new("UICorner")
flingCorner.CornerRadius = UDim.new(0, 8)
flingCorner.Parent = flingToggle

flingToggle.MouseButton1Click:Connect(function()
	flingAllEnabled = not flingAllEnabled
	if flingAllEnabled then
		flingToggle.Text = "Fling All: ON"
		flingToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
	else
		flingToggle.Text = "Fling All: OFF"
		flingToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	end
end)

RunService.Stepped:Connect(function()
	if not flingAllEnabled then return end
	local char = LocalPlayer.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			player.Character.HumanoidRootPart.Velocity = Vector3.new(9999, 9999, 9999)
		end
	end
end)

-- === Slap Bot ===
local slapBotEnabled = false
local mainLoopConnection, autoClickLoop, speedResetConnection

local slapToggle = Instance.new("TextButton")
slapToggle.Size = UDim2.new(0, 320, 0, 50)
slapToggle.Position = UDim2.new(0, 30, 0, 100)
slapToggle.Text = "Slap Bot: OFF"
slapToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
slapToggle.TextColor3 = Color3.new(1, 1, 1)
slapToggle.TextScaled = true
slapToggle.Font = Enum.Font.SourceSansBold
slapToggle.Parent = miscTab

local slapCorner = Instance.new("UICorner")
slapCorner.CornerRadius = UDim.new(0, 8)
slapCorner.Parent = slapToggle

-- Helpers
local function getHRP(player)
	return player.Character and player.Character:FindFirstChild("HumanoidRootPart")
end

local function getHumanoid(player)
	return player.Character and player.Character:FindFirstChildOfClass("Humanoid")
end

local function getClosestPlayer()
	local myHRP = getHRP(LocalPlayer)
	if not myHRP then return nil end
	local closest, shortest = nil, math.huge
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local hrp = getHRP(player)
			if hrp then
				local dist = (myHRP.Position - hrp.Position).Magnitude
				local yDiff = math.abs(myHRP.Position.Y - hrp.Position.Y)
				if dist < shortest and dist <= MAX_CHASE_DISTANCE and yDiff <= 3 then
					shortest = dist
					closest = player
				end
			end
		end
	end
	return closest
end

local function autoClick()
	local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
	if tool and tool.Enabled then tool:Activate() end
end

local function stopSlapBot()
	slapBotEnabled = false
	slapToggle.Text = "Slap Bot: OFF"
	slapToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	if mainLoopConnection then mainLoopConnection:Disconnect() end
	if speedResetConnection then speedResetConnection:Disconnect() end
	autoClickLoop = nil
	local hum = getHumanoid(LocalPlayer)
	if hum then hum.WalkSpeed = 16 end
end

local function startSlapBot()
	local humanoid = getHumanoid(LocalPlayer)
	local myHRP = getHRP(LocalPlayer)
	if not humanoid or not myHRP then return end
	slapBotEnabled = true
	slapToggle.Text = "Slap Bot: ON"
	slapToggle.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
	humanoid.WalkSpeed = SLAPBOT_WALK_SPEED
	speedResetConnection = RunService.Heartbeat:Connect(function()
		if slapBotEnabled and humanoid then humanoid.WalkSpeed = SLAPBOT_WALK_SPEED end
	end)
	autoClickLoop = task.spawn(function()
		while slapBotEnabled do
			autoClick()
			task.wait(AUTO_CLICK_INTERVAL)
		end
	end)
	mainLoopConnection = RunService.Heartbeat:Connect(function()
		local target = getClosestPlayer()
		if target and getHRP(target) then
			humanoid:MoveTo(getHRP(target).Position)
		end
	end)
end

slapToggle.MouseButton1Click:Connect(function()
	if slapBotEnabled then
		stopSlapBot()
	else
		startSlapBot()
	end
end)

-- Modified part: Restart slap bot 4 seconds after death
local function onCharacterAdded(character)
	-- Wait for humanoid
	local humanoid = character:WaitForChild("Humanoid", 10)
	if not humanoid then return end

	-- Connect to Died event
	humanoid.Died:Connect(function()
		-- Stop slap bot immediately
		stopSlapBot()

		-- After 4 seconds, check if character exists and restart slap bot
		task.delay(4, function()
			if LocalPlayer.Character and LocalPlayer.Character == character and LocalPlayer.Character:FindFirstChild("Humanoid") then
				startSlapBot()
			end
		end)
	end)
end

-- Connect to existing character (if any)
if LocalPlayer.Character then
	onCharacterAdded(LocalPlayer.Character)
end

-- Connect to future characters
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
